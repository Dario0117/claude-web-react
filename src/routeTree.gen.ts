/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PostsIndexRouteImport } from './routes/posts.index'
import { Route as AppunauthenticatedRouteRouteImport } from './routes/app/(unauthenticated)/route'
import { Route as AppauthenticatedRouteRouteImport } from './routes/app/(authenticated)/route'
import { Route as AppunauthenticatedResetPasswordRouteImport } from './routes/app/(unauthenticated)/reset-password'
import { Route as AppunauthenticatedRegisterRouteImport } from './routes/app/(unauthenticated)/register'
import { Route as AppunauthenticatedLoginRouteImport } from './routes/app/(unauthenticated)/login'
import { Route as AppauthenticatedProjectsIndexRouteImport } from './routes/app/(authenticated)/projects/index'
import { Route as AppauthenticatedDraftsIndexRouteImport } from './routes/app/(authenticated)/drafts/index'
import { Route as AppunauthenticatedUpdatePasswordTokenRouteImport } from './routes/app/(unauthenticated)/update-password.$token'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsIndexRoute = PostsIndexRouteImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppunauthenticatedRouteRoute = AppunauthenticatedRouteRouteImport.update({
  id: '/app/(unauthenticated)',
  path: '/app/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppauthenticatedRouteRoute = AppauthenticatedRouteRouteImport.update({
  id: '/app/(authenticated)',
  path: '/app/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppunauthenticatedResetPasswordRoute =
  AppunauthenticatedResetPasswordRouteImport.update({
    id: '/reset-password',
    path: '/reset-password',
    getParentRoute: () => AppunauthenticatedRouteRoute,
  } as any)
const AppunauthenticatedRegisterRoute =
  AppunauthenticatedRegisterRouteImport.update({
    id: '/register',
    path: '/register',
    getParentRoute: () => AppunauthenticatedRouteRoute,
  } as any)
const AppunauthenticatedLoginRoute = AppunauthenticatedLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AppunauthenticatedRouteRoute,
} as any)
const AppauthenticatedProjectsIndexRoute =
  AppauthenticatedProjectsIndexRouteImport.update({
    id: '/projects/',
    path: '/projects/',
    getParentRoute: () => AppauthenticatedRouteRoute,
  } as any)
const AppauthenticatedDraftsIndexRoute =
  AppauthenticatedDraftsIndexRouteImport.update({
    id: '/drafts/',
    path: '/drafts/',
    getParentRoute: () => AppauthenticatedRouteRoute,
  } as any)
const AppunauthenticatedUpdatePasswordTokenRoute =
  AppunauthenticatedUpdatePasswordTokenRouteImport.update({
    id: '/update-password/$token',
    path: '/update-password/$token',
    getParentRoute: () => AppunauthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/app': typeof AppunauthenticatedRouteRouteWithChildren
  '/posts': typeof PostsIndexRoute
  '/app/login': typeof AppunauthenticatedLoginRoute
  '/app/register': typeof AppunauthenticatedRegisterRoute
  '/app/reset-password': typeof AppunauthenticatedResetPasswordRoute
  '/app/update-password/$token': typeof AppunauthenticatedUpdatePasswordTokenRoute
  '/app/drafts': typeof AppauthenticatedDraftsIndexRoute
  '/app/projects': typeof AppauthenticatedProjectsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/app': typeof AppunauthenticatedRouteRouteWithChildren
  '/posts': typeof PostsIndexRoute
  '/app/login': typeof AppunauthenticatedLoginRoute
  '/app/register': typeof AppunauthenticatedRegisterRoute
  '/app/reset-password': typeof AppunauthenticatedResetPasswordRoute
  '/app/update-password/$token': typeof AppunauthenticatedUpdatePasswordTokenRoute
  '/app/drafts': typeof AppauthenticatedDraftsIndexRoute
  '/app/projects': typeof AppauthenticatedProjectsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/app/(authenticated)': typeof AppauthenticatedRouteRouteWithChildren
  '/app/(unauthenticated)': typeof AppunauthenticatedRouteRouteWithChildren
  '/posts/': typeof PostsIndexRoute
  '/app/(unauthenticated)/login': typeof AppunauthenticatedLoginRoute
  '/app/(unauthenticated)/register': typeof AppunauthenticatedRegisterRoute
  '/app/(unauthenticated)/reset-password': typeof AppunauthenticatedResetPasswordRoute
  '/app/(unauthenticated)/update-password/$token': typeof AppunauthenticatedUpdatePasswordTokenRoute
  '/app/(authenticated)/drafts/': typeof AppauthenticatedDraftsIndexRoute
  '/app/(authenticated)/projects/': typeof AppauthenticatedProjectsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/app'
    | '/posts'
    | '/app/login'
    | '/app/register'
    | '/app/reset-password'
    | '/app/update-password/$token'
    | '/app/drafts'
    | '/app/projects'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/app'
    | '/posts'
    | '/app/login'
    | '/app/register'
    | '/app/reset-password'
    | '/app/update-password/$token'
    | '/app/drafts'
    | '/app/projects'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/app/(authenticated)'
    | '/app/(unauthenticated)'
    | '/posts/'
    | '/app/(unauthenticated)/login'
    | '/app/(unauthenticated)/register'
    | '/app/(unauthenticated)/reset-password'
    | '/app/(unauthenticated)/update-password/$token'
    | '/app/(authenticated)/drafts/'
    | '/app/(authenticated)/projects/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AppauthenticatedRouteRoute: typeof AppauthenticatedRouteRouteWithChildren
  AppunauthenticatedRouteRoute: typeof AppunauthenticatedRouteRouteWithChildren
  PostsIndexRoute: typeof PostsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/': {
      id: '/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/(unauthenticated)': {
      id: '/app/(unauthenticated)'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppunauthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/(authenticated)': {
      id: '/app/(authenticated)'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppauthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/(unauthenticated)/reset-password': {
      id: '/app/(unauthenticated)/reset-password'
      path: '/reset-password'
      fullPath: '/app/reset-password'
      preLoaderRoute: typeof AppunauthenticatedResetPasswordRouteImport
      parentRoute: typeof AppunauthenticatedRouteRoute
    }
    '/app/(unauthenticated)/register': {
      id: '/app/(unauthenticated)/register'
      path: '/register'
      fullPath: '/app/register'
      preLoaderRoute: typeof AppunauthenticatedRegisterRouteImport
      parentRoute: typeof AppunauthenticatedRouteRoute
    }
    '/app/(unauthenticated)/login': {
      id: '/app/(unauthenticated)/login'
      path: '/login'
      fullPath: '/app/login'
      preLoaderRoute: typeof AppunauthenticatedLoginRouteImport
      parentRoute: typeof AppunauthenticatedRouteRoute
    }
    '/app/(authenticated)/projects/': {
      id: '/app/(authenticated)/projects/'
      path: '/projects'
      fullPath: '/app/projects'
      preLoaderRoute: typeof AppauthenticatedProjectsIndexRouteImport
      parentRoute: typeof AppauthenticatedRouteRoute
    }
    '/app/(authenticated)/drafts/': {
      id: '/app/(authenticated)/drafts/'
      path: '/drafts'
      fullPath: '/app/drafts'
      preLoaderRoute: typeof AppauthenticatedDraftsIndexRouteImport
      parentRoute: typeof AppauthenticatedRouteRoute
    }
    '/app/(unauthenticated)/update-password/$token': {
      id: '/app/(unauthenticated)/update-password/$token'
      path: '/update-password/$token'
      fullPath: '/app/update-password/$token'
      preLoaderRoute: typeof AppunauthenticatedUpdatePasswordTokenRouteImport
      parentRoute: typeof AppunauthenticatedRouteRoute
    }
  }
}

interface AppauthenticatedRouteRouteChildren {
  AppauthenticatedDraftsIndexRoute: typeof AppauthenticatedDraftsIndexRoute
  AppauthenticatedProjectsIndexRoute: typeof AppauthenticatedProjectsIndexRoute
}

const AppauthenticatedRouteRouteChildren: AppauthenticatedRouteRouteChildren = {
  AppauthenticatedDraftsIndexRoute: AppauthenticatedDraftsIndexRoute,
  AppauthenticatedProjectsIndexRoute: AppauthenticatedProjectsIndexRoute,
}

const AppauthenticatedRouteRouteWithChildren =
  AppauthenticatedRouteRoute._addFileChildren(
    AppauthenticatedRouteRouteChildren,
  )

interface AppunauthenticatedRouteRouteChildren {
  AppunauthenticatedLoginRoute: typeof AppunauthenticatedLoginRoute
  AppunauthenticatedRegisterRoute: typeof AppunauthenticatedRegisterRoute
  AppunauthenticatedResetPasswordRoute: typeof AppunauthenticatedResetPasswordRoute
  AppunauthenticatedUpdatePasswordTokenRoute: typeof AppunauthenticatedUpdatePasswordTokenRoute
}

const AppunauthenticatedRouteRouteChildren: AppunauthenticatedRouteRouteChildren =
  {
    AppunauthenticatedLoginRoute: AppunauthenticatedLoginRoute,
    AppunauthenticatedRegisterRoute: AppunauthenticatedRegisterRoute,
    AppunauthenticatedResetPasswordRoute: AppunauthenticatedResetPasswordRoute,
    AppunauthenticatedUpdatePasswordTokenRoute:
      AppunauthenticatedUpdatePasswordTokenRoute,
  }

const AppunauthenticatedRouteRouteWithChildren =
  AppunauthenticatedRouteRoute._addFileChildren(
    AppunauthenticatedRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AppauthenticatedRouteRoute: AppauthenticatedRouteRouteWithChildren,
  AppunauthenticatedRouteRoute: AppunauthenticatedRouteRouteWithChildren,
  PostsIndexRoute: PostsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
